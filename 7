import { Component, ElementRef, ViewChild } from '@angular/core';
import { Overlay, OverlayRef, ConnectedPosition, OverlayPositionBuilder } from '@angular/cdk/overlay';
import { TemplatePortal } from '@angular/cdk/portal';

@Component({
  selector: 'app-dropdown-example',
  templateUrl: './dropdown-example.component.html',
  styleUrls: ['./dropdown-example.component.css']
})
export class DropdownExampleComponent {
  @ViewChild('dropdownOrigin') dropdownOrigin!: ElementRef;
  @ViewChild('dropdownPanel') dropdownPanel!: ElementRef;

  private overlayRef!: OverlayRef;
  isOpen = false;

  constructor(
    private overlay: Overlay,
    private overlayPositionBuilder: OverlayPositionBuilder
  ) {}

  toggleDropdown() {
    if (this.isOpen) {
      this.overlayRef.dispose();
      this.isOpen = false;
      return;
    }

    const positions: ConnectedPosition[] = [
      {
        originX: 'start', originY: 'bottom',
        overlayX: 'start', overlayY: 'top'
      }
    ];

    this.overlayRef = this.overlay.create({
      positionStrategy: this.overlayPositionBuilder
        .flexibleConnectedTo(this.dropdownOrigin)
        .withPositions(positions),
      scrollStrategy: this.overlay.scrollStrategies.reposition()
    });

    this.overlayRef.attach(new TemplatePortal(this.dropdownPanel, null!));
    this.isOpen = true;
  }
}
<div class="dropdown-container">
  <button #dropdownOrigin (click)="toggleDropdown()">Open Dropdown</button>
</div>

<ng-template #dropdownPanel>
  <div class="dropdown-panel">
    <div>Option 1</div>
    <div>Option 2</div>
    <div>Option 3</div>
  </div>
</ng-template>
.dropdown-container {
  width: 200px;
}

.dropdown-panel {
  background: white;
  border: 1px solid #ccc;
  width: 100%; /* inherit parent width */
  box-shadow: 0 2px 6px rgba(0,0,0,0.2);
}
