ngAfterViewInit() {
  let resizeTimeout: any;
  let lastWidth = 0;
  let lastHeight = 0;

  this.resizeObserver = new ResizeObserver(entries => {
    clearTimeout(resizeTimeout);
    resizeTimeout = setTimeout(() => {
      const { width, height } = entries[0].contentRect;

      if (Math.abs(width - lastWidth) > 1 || Math.abs(height - lastHeight) > 1) {
        lastWidth = width;
        lastHeight = height;
        this.syncOtherElement(width, height);
      }
    }, 100);
  });

  setTimeout(() => {
    this.resizeObserver.observe(this.cdkElement.nativeElement);
  }, 100);
}

syncOtherElement(width: number, height: number) {
  this.otherElement.nativeElement.style.width = `${width}px`;
  this.otherElement.nativeElement.style.height = `${height}px`;
}

ngOnDestroy() {
  this.resizeObserver.disconnect();
}
