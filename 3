<h2 mat-dialog-title>
  Base Editor
  <button mat-icon-button mat-dialog-close style="float:right;">
    <mat-icon>close</mat-icon>
  </button>
</h2>

<div class="main-editor-screen">

  <!-- Scrollable Criteria Table -->
  <div class="criteria-table-container" #criteriaContainer>
    <div class="criteria-table">
      <!-- Header -->
      <div class="criteria-header">
        <span class="col-checkbox"></span>
        <span class="col-attr">Attribute</span>
        <span class="col-value">Value</span>
        <span class="col-unique">Unique</span>
        <span class="col-const">Constant</span>
        <span class="col-actions">Actions</span>
      </div>

      <!-- Rows -->
      <div class="criteria-rows">
       <div class="criteria-row" *ngFor="let field of fields; let i = index">
  <mat-checkbox [(ngModel)]="field.checked" class="col-checkbox"></mat-checkbox>

  <!-- Attribute as plain text, NOT mat-form-field -->
  <span class="col-attr">{{ field.name }}</span>

  <!-- Value dropdown, smaller and left-aligned -->
  <mat-form-field appearance="outline" class="col-value">
    <mat-select [(value)]="field.value" class="value-select">
      <mat-option *ngFor="let v of field.values" [value]="v" class="value-selected">{{ v }}</mat-option>
    </mat-select>
  </mat-form-field>

  <div class="col-unique">{{ field.unique }}</div>
  <div class="col-const">{{ field.constant }}</div>

  <div class="col-actions">
    <button mat-icon-button color="primary"
            [matTooltip]="'Info about ' + field.name"
            matTooltipPosition="above"
            matTooltipShowDelay="500">
      <mat-icon>info</mat-icon>
    </button>

    <button mat-icon-button color="warn" (click)="removeField(i)">
      <mat-icon>delete</mat-icon>
    </button>
  </div>
</div>

      </div>
    </div>
  </div>

  <!-- Search + Browse -->
  <div class="browse">
    <div style="display: flex; gap: 10px; align-items: center;">
      <input
        type="text"
        placeholder="Search Attribute"
        [(ngModel)]="searchText"
        [matAutocomplete]="auto"
        class="search-as-button"
      />
      <mat-autocomplete #auto="matAutocomplete" (optionSelected)="addField($event.option.value)">
        <mat-option *ngFor="let option of filteredOptions" [value]="option">
          {{ option }}
        </mat-option>
      </mat-autocomplete>

      <button mat-stroked-button color="accent" (click)="openBrowse(criteriaDialog)">
        Browse Attribute
      </button>
    </div>
  </div>

  <!-- Global Actions -->
  <div class="actions">
    <button mat-raised-button color="primary" (click)="updateResults()">Update Results</button>
  </div>

</div>

<!-- Popup Criteria Selector -->
<ng-template #criteriaDialog>
  <h2 mat-dialog-title>
    Select Attribute
    <button mat-icon-button mat-dialog-close style="float:right;">
      <mat-icon>close</mat-icon>
    </button>
  </h2>

  <mat-dialog-content class="criteria-popup" style="display:flex; gap:20px;">

    <!-- Left menu: horizontal levels -->
    <div class="menu-container" style="display:flex; gap:10px; max-height:450px; overflow-x:auto; flex:7;">
      <ng-container *ngFor="let level of menuLevels; let i = index">
        <div class="menu-level" style="min-width:150px; border-right:1px solid #ccc;">
          <div *ngFor="let item of level"
               (click)="selectItem(item, i)"
               (mouseenter)="hoveredItem = item"
               style="padding:6px 10px; cursor:pointer; border-bottom:1px solid #ddd; text-align:left;">
            {{ item.name }}
          </div>
        </div>
      </ng-container>
    </div>

    <!-- Right info panel -->
    <div class="info-panel" style="flex:3; border-left:1px solid #ccc; padding-left:10px; max-height:450px; overflow-y:auto;">
      <div *ngIf="hoveredItem">
        <p><strong>Name:</strong> {{ hoveredItem.name || '-' }}</p>
        <p><strong>Short Name:</strong> {{ hoveredItem.shortname || '-' }}</p>
        <p><strong>Last Updated:</strong> {{ hoveredItem.lastUpdate || '-' }}</p>
        <p><strong>Description:</strong> {{ hoveredItem.description || '-' }}</p>
      </div>
      <div *ngIf="!hoveredItem">
        Hover over an item to see details
      </div>
    </div>

  </mat-dialog-content>
</ng-template>
